# to start dummy web servers
services:
  backend1-1:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-1/backend-1
    hostname: backend1.1.local
    ports:
      - 8000:80
    command: ["go", "run", "/app/main.go"]

  backend1-2:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-1/backend-2
    hostname: backend1.2.local
    ports:
      - 8010:80
    command: ["go", "run", "/app/main.go"]
  backend1-3:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-1/backend-3
    hostname: backend1.3.local
    ports:
      - 8020:80
    command: ["go", "run", "/app/main.go"]

  backend2-1:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-2/backend-1
    hostname: backend2.1.local
    ports:
      - 8001:80
    command: ["go", "run", "/app/main.go"]
  backend2-2:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-2/backend-2
    hostname: backend2.2.local
    ports:
      - 8011:80
    command: ["go", "run", "/app/main.go"]
  backend2-3:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-2/backend-3
    hostname: backend2.3.local
    ports:
      - 8021:80
    command: ["go", "run", "/app/main.go"]

  backend3-1:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-3/backend-1
    hostname: backend3.1.local
    ports:
      - 8002:80
    command: ["go", "run", "/app/main.go"]

  backend3-2:
    image: golang:1.22
    volumes:
      - ./test-service/:/app
    environment:
      - SERVER_NAME=service-3/backend-2
    hostname: backend3.2.local
    ports:
      - 8012:80
    command: ["go", "run", "/app/main.go"]

  reverse-proxy:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    working_dir: /app
    volumes:
      - ./logs:/app/logs
    environment:
      - PORT=80
    command: ["./load-balancer"]
    depends_on:
      - backend1-1
      - backend1-2
      - backend1-3
      - backend2-1
      - backend2-2
      - backend2-3
      - backend3-1
      - backend3-2
